buildscript {
	ext.min_sdk_version = "10.0.0"
}

plugins {
	id 'maven-publish'
}

apply plugin: "com.android.library"

android {
	namespace = "com.knotbot.practiceapp"

	compileSdkVersion 28

	defaultConfig {
		minSdkVersion 24
		targetSdkVersion 28
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	publishing {
		singleVariant("release") {
			withSourcesJar()
		}
	}
}

task cleanAppAssets(type: Delete) {
	delete "${android.sourceSets.getByName("main").assets.srcDirs[0]}/practice"
}

clean.dependsOn cleanAppAssets

task copyAppAssets(type: Copy) {
	from "${project.projectDir}/../app/dist"
	into "${android.sourceSets.getByName("main").assets.srcDirs[0]}/practice"
}

copyAppAssets.dependsOn cleanAppAssets

android.libraryVariants.all { variant ->
	variant.preBuildProvider.get().dependsOn copyAppAssets
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.firstinspires.ftc:RobotCore:$min_sdk_version"
	implementation "org.firstinspires.ftc:Hardware:$min_sdk_version"
	implementation "org.firstinspires.ftc:RobotServer:$min_sdk_version"
	implementation "org.firstinspires.ftc:FtcCommon:$min_sdk_version"

	implementation("org.nanohttpd:nanohttpd-websocket:2.3.1") {
		exclude module: "nanohttpd"
	}
	implementation("com.squareup.moshi:moshi:1.15.2")
}

publishing {
	publications {
		release(MavenPublication) {
			groupId = 'com.github.22817-knotbot'
			artifactId = 'practiceapp'
			version = '0.1.0'

			pom {
				name = "FTC Practice App"
				description = "FTC Practice App is a web app designed to improve your driving performance"
				inceptionYear = "2025"
				url = "https://github.com/22817-KNOTbot/ftc-practice-app"
				licenses {
					license {
						name = "MIT License"
						url = "https://opensource.org/license/mit"
						distribution = "https://opensource.org/license/mit"
					}
				}
				developers {
					developer {
						id = "hotwh-et"
						name = "Ethan W"
						url = "https://github.com/hotwh-et/"
					}
				}
			}

			afterEvaluate {
				from components.findByName('release')
			}
		}
	}
}