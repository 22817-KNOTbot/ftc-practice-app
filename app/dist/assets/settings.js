import{g as v,a as w,r as M,s as T}from"./navbar.js";import{g as N}from"./data.js";const B={auto:30,transition:8,teleop:120,endgame:20};let h=0;N().then(e=>{h=Object.keys(e.data).length});const C=v("layout"),x=v("timerValues"),A=w(C),r=A.layoutDataGetter();let g="";typeof r.stylePath=="object"?r.stylePath.forEach(e=>{g+=`<link rel="stylesheet" href="${e}">`}):g=`<link rel="stylesheet" href="${r.stylePath}">`;document.querySelector("#app").innerHTML=g+r.html.settings;M(document.querySelector("nav"));const H=document.querySelectorAll(".settings-layout"),L=e=>{const o=document.querySelectorAll(".selected");for(const t of o)t.classList.remove("selected");const n=document.querySelector(`.settings-layout[data-layout="${e}"`);n==null||n.classList.add("selected")};L(C);const u={layout:C,timerValues:x};for(const e of H)e.addEventListener("click",o=>{var a,l,s,i;const n=o.target,t=((a=n==null?void 0:n.dataset)==null?void 0:a.layout)??((l=n==null?void 0:n.parentElement)==null?void 0:l.dataset.layout)??((i=(s=n==null?void 0:n.parentElement)==null?void 0:s.parentElement)==null?void 0:i.dataset.layout);t&&(u.layout=t,L(t))});const b=document.querySelectorAll(".settings-timer-value>input");var E;for(const e of b){const o=e.dataset.timerPeriod;o&&(e.value=((E=u.timerValues[o])==null?void 0:E.toString())??B[o]??0),e.addEventListener("focusout",n=>{const t=n.target,a=t.valueAsNumber;isNaN(a)||a<0||!Number.isInteger(a)?t.classList.add("invalid"):t.classList.remove("invalid")})}const k=e=>{const o={};for(const n of b){const t=n.dataset.timerPeriod,a=n.valueAsNumber;!isNaN(a)&&a>=0&&Number.isInteger(a)&&t&&(o[t]=a)}e.timerValues=o,T(u),document.location.reload()},D=document.querySelectorAll("#settings-save-button");for(const e of D)e.addEventListener("click",()=>k(u));const f=document.getElementById("settings-reset-button");f==null||f.addEventListener("click",()=>{q()});const q=()=>{const e=document.getElementById("confirmationModal"),o=document.getElementById("modalHeaderContainer"),n=document.getElementById("modalHeader"),t=document.getElementById("modalContent");if(!e||!o||!n||!t)return;e.classList.add("shownModal"),t.scrollTop=0,t.innerHTML="",n.textContent="Reset all settings";const a=t.appendChild(document.createElement("h2"));a.className="firstModalHeader",a.textContent="Are you sure you want to reset all settings?";const l=t.appendChild(document.createElement("h3"));l.className="modalContentSubtitle",l.textContent="You cannot undo this action!";const s=t.appendChild(document.createElement("button"));s.id="confirmDanger",s.textContent="Confirm",s.addEventListener("click",()=>{localStorage.clear(),document.location.reload()})},p=document.getElementById("settings-delete-button");p==null||p.addEventListener("click",()=>{P()});const P=()=>{const e=document.getElementById("confirmationModal"),o=document.getElementById("modalHeaderContainer"),n=document.getElementById("modalHeader"),t=document.getElementById("modalContent");if(!e||!o||!n||!t)return;e.classList.add("shownModal"),t.scrollTop=0,t.innerHTML="",n.textContent="Delete all runs";const a=t.appendChild(document.createElement("h2"));a.className="firstModalHeader",a.textContent="Are you sure you want to delete all runs?";const l=t.appendChild(document.createElement("h3"));l.className="modalContentSubtitle",l.textContent="This will clear all your run data and stats. You cannot undo this action!";const s=`Yes, I want to delete all ${h} runs`,i=t.appendChild(document.createElement("p"));i.className="modalConfirmationChallenge",i.textContent=`To confirm, type "${s}"`;const d=t.appendChild(document.createElement("form"));d.autocomplete="off";const c=d.appendChild(document.createElement("input"));c.id="challengeInput",c.classList.add("editModalInput"),c.setAttribute("type","text"),c.setAttribute("placeholder",s);const m=d.appendChild(document.createElement("input"));m.type="submit",m.id="confirmDanger",m.value="Confirm",d.addEventListener("submit",S=>{S.preventDefault(),c.value==s?fetch("/practice/data/delete",{headers:{"challenge-answer":h.toString()},method:"POST"}).then(y=>{if(!y.ok)throw new Error(`${y.status} ${y.statusText}`);e.classList.remove("shownModal"),new Promise(I=>{setTimeout(I,200)}).then(()=>document.location.reload())}):c.classList.add("invalid")})};window.addEventListener("mousedown",e=>{const o=document.getElementById("confirmationModal");o.contains(e.target)||o.classList.remove("shownModal")});
